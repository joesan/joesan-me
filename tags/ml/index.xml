<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ml on bigelectrons</title><link>https://bigelectrons.com/tags/ml/</link><description>Recent content in ml on bigelectrons</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright Â© 2018 - 2025 @ https://github.com/Joesan</copyright><lastBuildDate>Sun, 19 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://bigelectrons.com/tags/ml/index.xml" rel="self" type="application/rss+xml"/><item><title>Handling Missing Data in Data Pre-Processing</title><link>https://bigelectrons.com/post/mlandai/handling-missing-data/</link><pubDate>Sun, 19 May 2024 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/mlandai/handling-missing-data/</guid><description>
Handling missing data is a crucial step in the data preprocessing pipeline for any machine learning project. Imputation, the process of replacing missing data with substituted values, is essential for building robust and reliable models. This article explores various imputation techniques, provides code examples, and discusses the pros and cons of each method.
Understanding Missing Data Before diving into imputation techniques, it's important to understand the types of missing data:</description></item><item><title>Understanding Data Leakage in the ML Paradigm</title><link>https://bigelectrons.com/post/mlandai/data-leakage-in-ml/</link><pubDate>Sat, 18 May 2024 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/mlandai/data-leakage-in-ml/</guid><description>
Data leakage is a critical issue in machine learning that can lead to overly optimistic performance metrics and poor generalization to new data. This article explains what data leakage is, why it is problematic, and how to avoid it during data pre-processing.
What is Data Leakage? Data leakage occurs when information from outside the training dataset is used to create the model. This means that the model inadvertently has access to information that it wouldn't normally have in a real-world scenario.</description></item><item><title>When a Bloom filter really blooms....</title><link>https://bigelectrons.com/post/mlandai/bloom-filter/</link><pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/mlandai/bloom-filter/</guid><description>
Definition Simply put, a Bloom filter is a space-efficient probabilistic data structure with which we can determine the probable existence of a certain thing in a certain data set, and we can determine the non-existence of a certain thing in a certain data set with utmost accuracy. Doing all this in a memory space efficient manner.
In a gist, Bloom filters are about determining if an element may be in a set or is definitely not in a set</description></item><item><title>Math behind simple Linear Regression</title><link>https://bigelectrons.com/post/math/linear-regression/</link><pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/math/linear-regression/</guid><description>
I have been wondering on how the math behind a Linear regression works as in most of the ML books that you encounter, the focus will be on giving you a linear equation and just plugging this equation in a Python library to solve for the slope and bias and then use it to predict the new values. It is very rare that they show you how to find the m and b values.</description></item><item><title>CCTV Monitor with Raspberry Pi &amp; OpenCV</title><link>https://bigelectrons.com/post/mlandai/raspi-with-opencv/</link><pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/mlandai/raspi-with-opencv/</guid><description>
I wanted to play around with OpenCV and thought it might be a good idea to try OpenCV with a real life use case. DIY'ing a home camera system that can do motion detection and click images when there is some movement in the frame sounded like a cool idea. So I researched on how I could get this set up done.
There were quite a few things that I should decide, like for example.</description></item></channel></rss>