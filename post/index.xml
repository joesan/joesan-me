<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on bigelectrons</title><link>https://bigelectrons.com/post/</link><description>Recent content in Posts on bigelectrons</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright Â© 2018 - 2025 @ https://github.com/Joesan</copyright><lastBuildDate>Fri, 16 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://bigelectrons.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Operational Cost comparison between a HEV and BEV</title><link>https://bigelectrons.com/post/misc/hev-bev-cost-comparison/</link><pubDate>Fri, 16 Aug 2024 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/hev-bev-cost-comparison/</guid><description>
Recently I had to make a choice of which new car to get so that I can replace my old Diesel car. Given the industry shift to electric vehicles, it is definitely an unfortunate time to buy. I mean it is an unfortunate time in the sense that EV is an emerging technology market, and we see new cars launched every year and with that new technology, be it the battery (solid state), or the charging speed among many others, the prices are insanely expensive.</description></item><item><title>Handling Missing Data in Data Pre-Processing</title><link>https://bigelectrons.com/post/mlandai/handling-missing-data/</link><pubDate>Sun, 19 May 2024 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/mlandai/handling-missing-data/</guid><description>
Handling missing data is a crucial step in the data preprocessing pipeline for any machine learning project. Imputation, the process of replacing missing data with substituted values, is essential for building robust and reliable models. This article explores various imputation techniques, provides code examples, and discusses the pros and cons of each method.
Understanding Missing Data Before diving into imputation techniques, it's important to understand the types of missing data:</description></item><item><title>Understanding Data Leakage in the ML Paradigm</title><link>https://bigelectrons.com/post/mlandai/data-leakage-in-ml/</link><pubDate>Sat, 18 May 2024 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/mlandai/data-leakage-in-ml/</guid><description>
Data leakage is a critical issue in machine learning that can lead to overly optimistic performance metrics and poor generalization to new data. This article explains what data leakage is, why it is problematic, and how to avoid it during data pre-processing.
What is Data Leakage? Data leakage occurs when information from outside the training dataset is used to create the model. This means that the model inadvertently has access to information that it wouldn't normally have in a real-world scenario.</description></item><item><title>Vacation in Paris</title><link>https://bigelectrons.com/post/misc/vacation-in-paris/</link><pubDate>Fri, 29 Jul 2022 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/vacation-in-paris/</guid><description>
I just came back from my vacation in Paris. Just thought of writing down my experience and what I did with my family while in Paris.
How to Reach Paris We decided that we will drive to Paris. From where we are located, it just takes us a 6 to 7-Hour drive by car. On the way, there are plenty of rest places with sufficient facilities for food.
Where to Stay There are tons and tons of options.</description></item><item><title>A DIY Forearm Trainer Kit</title><link>https://bigelectrons.com/post/misc/diy-forearm-trainer/</link><pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/diy-forearm-trainer/</guid><description>
I occasionally get physically active and do some training. I was figuring out what kind of physical activity that I could do when I'm sitting. This is when I thought about doing some exercises for the forearm.
As I'm someone who loves to DIY, I wanted to figure out which actions I want my forearm to do, and I remember being a teenager doing some dumbbell training that had to be rolled with both your arms stretched out.</description></item><item><title>Functors in Scala</title><link>https://bigelectrons.com/post/scala/scala-functors/</link><pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-functors/</guid><description>
Let us debunk this major, but simple functional abstraction called the Functor
Intuition behind Functors The idea stems from category theory and can be readily applied to elegantly look inside a container that contains a certain category and apply a function to the contents, thereby producing another category wrapped inside the same container. The name of a functor sounds very much similar to that of a function and in fact it is indeed the same, but there is this additional thingy called the container or in other words a context.</description></item><item><title>Convert your pom xml to build sbt</title><link>https://bigelectrons.com/post/scala/scala-pom-to-sbt/</link><pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-pom-to-sbt/</guid><description>
Aren't you at your limits dealing with XML? If so why still bother using a build tool that still uses an outdated format like the XML? Why use Maven when you can be friends with sbt? Here is a small script that helps you to convert your pom.xml to a build.sbt. The generated build.sbt is rusty, and you need to adapt it after it is converted.
1#!/bin/sh 2exec /opt/softwares/scala-2.12.2/bin/scala &amp;#34;$0&amp;#34; &amp;#34;$@&amp;#34; 3!</description></item><item><title>Navigating the Pentatonic Scale in Triangles</title><link>https://bigelectrons.com/post/misc/guitar-navigating-pentatonic-scale/</link><pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/guitar-navigating-pentatonic-scale/</guid><description>
Climbing the Pentatonic scales Recently, I can say that I made very good progress playing across the neck of my guitar. I memorized few pentatonic shapes, but I was stuck the whole while on those specific boxes. The whole thing did not make any sense to me. Just wandering within those boxes is not pleasant music. Frustrated, I looked at Youtube for some motivational ideas on how to unstuck me from the boxes.</description></item><item><title>Red Wing 3140 Work Chukka</title><link>https://bigelectrons.com/post/misc/red-wing-3140/</link><pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/red-wing-3140/</guid><description>
Disclaimer: I'm not paid to write about this post, this is purely my ownership experience using these boots!
A blog on a pair of shoes? A bit unusual for my blog that I'm writing about a pair of shoes. It is still just a shoe, but it is a Red Wing Chukka, the 3140 in the Oro-Iginal leather. There is a reason why I'm writing about this piece of hardware that brings joy and comfort to my knee and foot.</description></item><item><title>Moved From Zola to Hugo</title><link>https://bigelectrons.com/post/misc/moved-from-zola-to-hugo/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/moved-from-zola-to-hugo/</guid><description>
What happened? It was time to move again! In one of my earlier posts, I have mentioned my move from Blogger to GH-Pages and for that I decided to go with Zola. It was all fine, but after a few months, I wanted to have few additional features for the theme that I was using. It was such a great and a simple theme and looked so elegant, but some features that I was in dire need of was kind of missing.</description></item><item><title>Convert Images to PDF on Ubuntu</title><link>https://bigelectrons.com/post/linux/images-to-pdf/</link><pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/linux/images-to-pdf/</guid><description>
I had a necessity to generate a PDF document out of a set of jpg images that I had on my local hard drive on my Ubuntu 20.04 Laptop. I came across this simple step on how to do it. Here it is documented:
Install img2pdf 1sudo apt-get install -y img2pdf Navigate to the folder that contains your images and run the following command 1img2pdf *.jp* --output your-pdf.pdf As usual, img2pdf --help is your friend for additional options on how to use this package.</description></item><item><title>Running Scala from within a shell script</title><link>https://bigelectrons.com/post/scala/scala-shell-script/</link><pubDate>Sat, 10 Apr 2021 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-shell-script/</guid><description>
Sometimes you have the need to run a shell script for some basic functions or simple tasks that you want to execute locally on your machine. The goto choice will be to write some shell script (assuming you are on a Linux). Here is a way to do that but use Scala, your favorite language.
It is actually quite simple as it can be seen from the snippet below:
1#!/bin/sh 2exec scala &amp;#34;$0&amp;#34; &amp;#34;$@&amp;#34; 3!</description></item><item><title>When a Bloom filter really blooms....</title><link>https://bigelectrons.com/post/mlandai/bloom-filter/</link><pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/mlandai/bloom-filter/</guid><description>
Definition Simply put, a Bloom filter is a space-efficient probabilistic data structure with which we can determine the probable existence of a certain thing in a certain data set, and we can determine the non-existence of a certain thing in a certain data set with utmost accuracy. Doing all this in a memory space efficient manner.
In a gist, Bloom filters are about determining if an element may be in a set or is definitely not in a set</description></item><item><title>Keeping up with Upstream Git Repo</title><link>https://bigelectrons.com/post/infra/git-upstream-origin-fork/</link><pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/infra/git-upstream-origin-fork/</guid><description>
If you have forked a repository in GitHub that you want to work on, you do so, make your changes locally and once you are confident that everything works, you issue a pull request to the upstream so that your changes can be reviewed and merged. Here is a small snippet that I use to keep my fork up-to-date with the upstream.
upstream - The original repository from which you fork</description></item><item><title>Moved from Blogger to GH Pages</title><link>https://bigelectrons.com/post/misc/blogger-to-gh-pages/</link><pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/blogger-to-gh-pages/</guid><description>
I have been documenting so far with Blogger. Recently I started to do some Robotics projects with ROS. As I was doing it, I was looking for ways to get all what I do be documented. I know Github offers GH Pages, but I was a bit reluctant to try it out. So for the Navo project, I decided that GH Pages will be the source for my documentation, hence I wanted to give it a try.</description></item><item><title>Lamport's Logical Clock - Ordering Events in a Distributed System</title><link>https://bigelectrons.com/post/engineering/lamport-logical-clock-1/</link><pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/engineering/lamport-logical-clock-1/</guid><description>
Basically a distributed system is one in which the components or processes or nodes that comprise a system is distributed across nodes or sometimes even across geographies. But these systems need to communicate with each other to accomplish something meaningful. The most efficient, scalable and proven way of making these distributed systems communicate is via passing messages, sometimes even having a messaging middleware (like Kafka for example.,) as a central component.</description></item><item><title>Deeply disappointed with Travis CI and the way OSS is treated</title><link>https://bigelectrons.com/post/infra/travis-ci-1/</link><pubDate>Sat, 12 Dec 2020 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/infra/travis-ci-1/</guid><description>
I have been a happy user of the Travis CI free usage over the last couple of years. But one announcement recently made me deeply worried. Have a look here at their announcement
Yes, Travis CI will no longer be free for OSS projects. There is no point in blaming Travis CI for this but rather on those idiots who abused the free usage with crypto minites and tor nodes. These bastards completely broke the trust Travis CI free tier gave for OSS projects.</description></item><item><title>Mark &amp; run integration unit tests with SBT and Scala</title><link>https://bigelectrons.com/post/scala/scala-integration-test/</link><pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-integration-test/</guid><description>
It is a good practice to write integration unit tests for your services and integrate them in your CI workflow. Such integration tests boosts the confidence of your application quality especially when it needs to be deployed in an environment where it has to talk to numerous other external services. In this regard, I wanted to write such integration tests for one of my scala project which uses SBT as a build tool.</description></item><item><title>Once more a blow, a nasty one this time</title><link>https://bigelectrons.com/post/misc/acl-knee-injury-6/</link><pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/acl-knee-injury-6/</guid><description>
I could not say this more than what the title says. I had a very severe blow to my already damaged left knee. First a bit of history here and here.
It was on the 28th of September where I went for my first ever defensive sport training called &amp;quot;VingTsun&amp;quot;. Inspired by my Physio friend who is a beginner, I decided to give this training a try. I indeed watched few videos of it before committing myself to joining him for the training session which starts around 20:00 Hours near to where I live.</description></item><item><title>On Navigating the Pentatonic scale</title><link>https://bigelectrons.com/post/misc/guitar-learning-2/</link><pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/guitar-learning-2/</guid><description>
Recently, I can say that I made very good progress playing across the neck of my guitar. I memorized few pentatonic shapes, but I was stuck the whole while on those specific boxes. The whole thing did not make any sense to me. Just wandering within those boxes is not pleasant music. Frustrated, I looked at Youtube for some motivational ideas on how to unstuck me from the boxes.
Luckily, this one video in Youtube that I found on a random search helped me immensely.</description></item><item><title>Moved from Apple to Infinitybook a.k.a Tuxedo a.k.a Ubuntu</title><link>https://bigelectrons.com/post/linux/ubutnu-tuxedo-1/</link><pubDate>Sun, 19 Jul 2020 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/linux/ubutnu-tuxedo-1/</guid><description>
I have been using a Mac for over 7 years now, I have used about 3 Mac's where the 3rd one is still working fine. I have kids at home, they feed food to it and because of that the keys on my Mac is out of order. So it was time for me to have some privacy and get one machine for myself.
Looking around the latest iteration of the MacBook Pro 13&amp;quot;, the configuration that I could get for the money and more importantly what I will be doing with it actually got me into thinking if I ever need a Mac at all?</description></item><item><title>CI for Kubernetes Resources</title><link>https://bigelectrons.com/post/infra/k8s-deployment-ci/</link><pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/infra/k8s-deployment-ci/</guid><description>
Recently I have been exploring more around the Kubernetes tooling, especially the ones that can do some pre-validation on the schema and the state of my Kubernetes deployment resources or more precisely the YAML files.
I came across a few of them like conftest, kubeval etc and a wrapper around such set of tools like the kube-tools project which can be used as a GitHub Actions in your GitHub project.</description></item><item><title>My journey thus far with learning to play the guitar</title><link>https://bigelectrons.com/post/misc/guitar-learning-1/</link><pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/guitar-learning-1/</guid><description>
I remember my interest to play the guitar started in the year 2012 and without any hesitation, I went and purchased my first ever electric guitar, the Ibanez GSA 60 and a small Marshall amplifier. I'm not sure at that point in time if it was the right decision to start with an electric guitar but as I recollect, I don't think I made any significant progress with it. I was even struggling to play the basic chord shapes.</description></item><item><title>Oh my left knee - You cause my problems!</title><link>https://bigelectrons.com/post/misc/acl-knee-injury-5/</link><pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/acl-knee-injury-5/</guid><description>
This morning it was just a normal day as always. We always have some balloons in our hall as my younger daughter likes to play it like a volleyball with me. I also enjoy entertaining her for some time.
So there were a few balloons in the hall, which I casually like to kick. As I kicked one with my right leg, my left leg kind of went out of balance, it twisted (as I have no cross ligaments because of my MTB accident 2 years ago.</description></item><item><title>GitOps with K8s</title><link>https://bigelectrons.com/post/infra/k8s-git-ops-1/</link><pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/infra/k8s-git-ops-1/</guid><description>
Some time around the summer of 2019, I came across a blog post where I read about GitOps and I was flattened by the idea itself and ever since I wanted to give it a try on some serious projects but never had the chance to do it professionally. I had a chat about this with many of my colleagues at work and my team, they seemed ro like the idea but were a bit reluctant to employ this concept in their projects.</description></item><item><title>Understanding Feed Forward Neural Network Architectures</title><link>https://bigelectrons.com/post/math/feed-forward-neural-net/</link><pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/math/feed-forward-neural-net/</guid><description>
I have been reading through the architectures of Neural Networks and wanted to grasp the idea behind calculating the weights in a Neural Network and as you can see in the image below is a simple 2 node 2 layer Neural Network.
As you can see that for simplicityâs sake, I have just used a 2 node 2 layer network, but the same holds true for any sized Neural Network. It's just that the size of the Matrix increases proportionally to the number of inputs!</description></item><item><title>Math behind simple Linear Regression</title><link>https://bigelectrons.com/post/math/linear-regression/</link><pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/math/linear-regression/</guid><description>
I have been wondering on how the math behind a Linear regression works as in most of the ML books that you encounter, the focus will be on giving you a linear equation and just plugging this equation in a Python library to solve for the slope and bias and then use it to predict the new values. It is very rare that they show you how to find the m and b values.</description></item><item><title>My Trek Remedy clocks 1000 km this season</title><link>https://bigelectrons.com/post/misc/mtb-trek-remedy-1000-km/</link><pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/mtb-trek-remedy-1000-km/</guid><description>
So as of today, I managed to clock on record a total of 1000 Km with my Trek Remedy 8. It is obviously much higher than that as for several rides I haven't turned my Sigma odometer device. But for the record, the mileage is 1000 Km for this year so far.
I have explored much of the singles trails around my area! It was fun riding this bike! I hope to do even more miles for the next season!</description></item><item><title>Yet another impact on the injured knee!</title><link>https://bigelectrons.com/post/misc/acl-knee-injury-4/</link><pubDate>Tue, 13 Aug 2019 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/acl-knee-injury-4/</guid><description>
Last Thursday, I took a day off. As the weather was good I decided to take my kids and my mom to Apeldoorn in the Netherlands. We wanted to visit the theme park and spend the day there. My mom is here with us in Germany to visit us and to take care of the kids during their summer vacation. Apeldoorn is a 2-hour drive from where we live. As usual, we did not manage to start early and ended up reaching our destination around 12:00.</description></item><item><title>Send it... yep! Sendin it...</title><link>https://bigelectrons.com/post/misc/mtb-ramp-1/</link><pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/mtb-ramp-1/</guid><description>
What does &amp;quot;Send it mean? It's a jargon used within the Mountain Biking community, especially the Downhill community that indicates that you are about to hit a jump and that you have to clear the jump! Jumpin on the trails requires technique, a lot of practice. One way to practice the technique is to do it using some artificially made ramps! That exactly was my DIY project this weekend! I went to the local store &amp;quot;Bauhaus&amp;quot; as it is called here in Germany and shopped for some wood and nails.</description></item><item><title>How is it to experience a Blackout</title><link>https://bigelectrons.com/post/misc/mtb-ride-black-out/</link><pubDate>Sun, 14 Jul 2019 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/mtb-ride-black-out/</guid><description>
Today, I drove to DÃ¼sseldorf to Mountain bike the Aaper wald. I made a nasty mistake of not having enough breakfast. It started good, but after reaching the foot of the hill, I started to ride the up-hill section. After pedalling for about a minute or two, I started to notice that my legs were pounding hard. I feel that this must be the activity of my heart trying to pump more blood to my legs to feed them with power.</description></item><item><title>Back with MTB Tours and Downhill rides</title><link>https://bigelectrons.com/post/misc/mtb-ride-1/</link><pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/mtb-ride-1/</guid><description>
Mountain biking is addictive! Worse than drugs!
After a couple of months of staying away from my MTB, I'm back with it and I'm looking forward to this season to ride as much as possible and more importantly, without any accidents and injuries! I got my bike serviced and about a week ago. This is how &amp;quot;The Beast&amp;quot; looked after returning back from the service!
I took it for a spin in the trails around DÃ¼sseldorf.</description></item><item><title>4 Months update of my Knee</title><link>https://bigelectrons.com/post/misc/acl-knee-injury-3/</link><pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/acl-knee-injury-3/</guid><description>
It is now roughly 4 months since I injured my knee and the recovery so far has been very positive. On the downside, I have the feeling that my knee is not like it was before! Occasionally I get a strange wobbly feeling on my injured knee!
So for the first 2 months, I was not able to fully stretch or bend my injured leg, but that got a lot better now.</description></item><item><title>The beauty that goes behind a Mechanical watch</title><link>https://bigelectrons.com/post/misc/nomos-tangente-1/</link><pubDate>Fri, 14 Dec 2018 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/nomos-tangente-1/</guid><description>
Mechanical watches - They are the representation of artistic ingenuity. If you are wondering what is so fascinating about mechanical watches, I welcome you to take a look at some Youtube videos that shows how a mechanical watch is manufactured. It is after knowing, understanding and appreciating the artwork that goes behind the making of a mechanical watch, I decided that I will get one for myself.
I'm not a watch collector, I have never owned a time piece until I got my first mechanical watch in the spring of 2018.</description></item><item><title>6 Weeks Update of my Knee</title><link>https://bigelectrons.com/post/misc/acl-knee-injury-2/</link><pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/acl-knee-injury-2/</guid><description>
Roughly 3 weeks ago on the 5th of October, I had an MTB bike accident and in the process I ended up injuring my left knee. I was actually attempting to Manual during which I realized that I was about to lose my balance. I wanted to bail out from the Manual, so I tried to pull the bike completely to the front with me jump landing behind the rear wheels, but the bailout got totally out of control and eventually I ended up twisting my left knee soon after the jump.</description></item><item><title>CCTV Monitor with Raspberry Pi &amp; OpenCV</title><link>https://bigelectrons.com/post/mlandai/raspi-with-opencv/</link><pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/mlandai/raspi-with-opencv/</guid><description>
I wanted to play around with OpenCV and thought it might be a good idea to try OpenCV with a real life use case. DIY'ing a home camera system that can do motion detection and click images when there is some movement in the frame sounded like a cool idea. So I researched on how I could get this set up done.
There were quite a few things that I should decide, like for example.</description></item><item><title>What it is like to twist your knee?</title><link>https://bigelectrons.com/post/misc/acl-knee-injury-1/</link><pubDate>Thu, 18 Oct 2018 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/misc/acl-knee-injury-1/</guid><description>
Roughly 3 weeks ago on the 5th of October, I had an MTB bike accident and in the process I ended up injuring my left knee. I was actually attempting to Manual during which I realized that I was about to lose my balance. I wanted to bail out from the Manual, so I tried to pull the bike completely to the front with me jump landing behind the rear wheels, but the bailout got totally out of control and eventually I ended up twisting my left knee soon after the jump.</description></item><item><title>Going behind Scala's recursion</title><link>https://bigelectrons.com/post/scala/scala-recursion/</link><pubDate>Tue, 18 Sep 2018 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-recursion/</guid><description>
There are times when we might want to call a function which calls itself repeatedly n number of times. In my career programming with Java so far, I have not written any single recursive functions, the main reason being that writing recursion was hard with Java. Java is best suited for an iterative approach. Sometimes a recursive code is a bit hard to read and follow. It is not that self intuitive as with an iteration.</description></item><item><title>K8s Cluster SetUp on a Set of Raspberry Pi</title><link>https://bigelectrons.com/post/infra/k8s-raspi-cluster/</link><pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/infra/k8s-raspi-cluster/</guid><description>
Some time ago I managed to set up a 4 node K8s cluster on a set of Raspberry Pi's that were lying idle at my home. In case it interests you, please have a look here for the complete setup, the required components and on how to get it up and running</description></item><item><title>Basics on Blockchain Mining</title><link>https://bigelectrons.com/post/crypto/blockchain-documentation/</link><pubDate>Fri, 03 Nov 2017 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/crypto/blockchain-documentation/</guid><description>
blockchain-documentation This is a summary of the concepts around Blockchain technology!
There are two types of Software architectures exists - Centralized &amp;amp; Distributed A Hybrid architecture is also possible Centrally Distributed architectures Blockchain simply put is a tool to maintain Trust &amp;amp; Integrity in a peer-to-peer system The challenge is to solve the Trust &amp;amp; Integrity in the worst of all situations The Blockchain challenge - The idea behind Mining or Proof-Of-Work: Here is a very simplistic view of what the actual miners do when mining for the Bitcoin, or rather to put it in mathematical terms, solving a puzzle - The puzzle is always to find the leading zeros in the resulting hash of a new block.</description></item><item><title>Void NullPointerException with Scala Option</title><link>https://bigelectrons.com/post/scala/scala-null-pointer/</link><pubDate>Mon, 22 May 2017 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-null-pointer/</guid><description>
If you tell me that in your programming career, you have never been inflicted at-least once with a NullPointerException, you were simply the best programmer out there. During the early days of my career. I can remember times and times again, I ended up hitting NullPointerException's until I really made it a point to adjust my design to completely get rid of them. It was just me trying to get rid of them, but the NullPointers weren't prepared to leave me.</description></item><item><title>Test private methods with Scala Test</title><link>https://bigelectrons.com/post/scala/scala-test-private-method/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-test-private-method/</guid><description>
I will not debate upon whether writing private methods are a code smell or not but rather just show how a private method can be unit tested using the Scala Test framework
Here is our test class where we would write a unit test which tests a private method called myPrivateMethod in a class called MyClass
1class MyPrivateTester extends FlatSpec with Matchers with PrivateMethodTester { 2 &amp;#34;PrivateMethodTester&amp;#34; should &amp;#34;be able to test a private method in MyClass&amp;#34; in { 3 val privateMethod = PrivateMethod[String](&amp;#39;myPrivateMethod) 4 val myClass = new MyClass 5 val invocationResult: String = myClass.</description></item><item><title>Scala's Dynamic Proxy</title><link>https://bigelectrons.com/post/scala/scala-dynamic-proxy/</link><pubDate>Thu, 23 Mar 2017 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-dynamic-proxy/</guid><description>
One of the coolest features since Scala 2.10.3 are the Scala dynamic types. Let's look at what they are!
A dynamic type is a type with which we can dynamically add fields / methods to an existing type. This is better explained with some examples
Assume that we have a scala class as defined below:
1 class MyClass { 2 def myMethod(str: String) = println(str) 3 } 4 ... 5 .</description></item><item><title>Converting collections to and fro in Scala / Java</title><link>https://bigelectrons.com/post/scala/scala-java-conversion/</link><pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-java-conversion/</guid><description>
Say that you have to use a Java library in your Scala application and this Java library has a couple of API's that require you to pass a Java collection type. Let's see how we can cope with it by looking at the following examples:
Suppose I have a Java ArrayList that contains some Integers that I want to map these List of Integers by incrementing 1 to each of the elements in the ArrayList as below:</description></item><item><title>Implicit Classes Scala 2.10 Extension Methods</title><link>https://bigelectrons.com/post/scala/scala-implicit-class/</link><pubDate>Mon, 16 Jan 2017 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-implicit-class/</guid><description>
Having worked with C# in the last couple of months, writing extension methods was one of the cool features that I appreciated a lot!
Extension methods are just a way to add new methods to the existing set of types. For example, the double type has several methods as part of the Scala API. If you now want to add a method that finds the reciprocal of a double, the first thing that comes naturally would be to write a helper utility function that does this for us.</description></item><item><title>Pattern Matching Scala Collections</title><link>https://bigelectrons.com/post/scala/scala-pattern-match-collection/</link><pubDate>Wed, 04 Jan 2017 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-pattern-match-collection/</guid><description>
One of the astonishing features that Scala has is the pattern matching mechanism. Think of it like a Java Switch statement on Steroids. Pattern matching is such a powerful concept in Scala. Once you start using them, you'll find it inevitable to not using them. Let's look at some examples
You want to pattern match a List based on the number of elements in the List :
1def patternMatch = { 2 val matchResult = List(1,2,3,4,5) match { 3 case Nil =&amp;gt; &amp;#34;Matches an empty List&amp;#34; 4 case head :: Nil =&amp;gt; &amp;#34;Matches a List that has exactly one element&amp;#34; 5 case head :: tail =&amp;gt; &amp;#34;Matches a List that hast at-least one element&amp;#34; 6 } 7} What is happening in the above code snippet is that, the myList is run through the case blocks.</description></item><item><title>Map'em up</title><link>https://bigelectrons.com/post/scala/scala-map/</link><pubDate>Tue, 27 Dec 2016 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-map/</guid><description>
No, it is not the Map implementation that we are going to talk about. Let me ask you a very simple question. I assume that you have written functions or methods or routines or whatever you call it. What do you think that it actually does? ...., 3...., 2...., 1.... TimeUp. Let me answer that for you.
A function or a method maps the thingy on the left to the thingy on the right.</description></item><item><title>What the heck are Scala's ExecutionContext's?</title><link>https://bigelectrons.com/post/scala/scala-execution-context/</link><pubDate>Tue, 27 Dec 2016 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-execution-context/</guid><description>
An ExecutionContext or otherwise called a thread pool is vital when running asynchronous code. In Scala, there is a global ExecutionContext that you can supply to your asynchronous code blocks. An ExecutionContext is just an Executor of a Task. It executes a Task in such a way that it is free to execute the Task in a new Thread of its choice.
The Scala's global ExecutionContext uses a ForkJoinPool. The ForkJoinPool is an ExecutorService that executes a Task.</description></item><item><title>Partial Functions in Scala</title><link>https://bigelectrons.com/post/scala/scala-partial-functions/</link><pubDate>Fri, 23 Sep 2016 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-partial-functions/</guid><description>
Before taking a look at what partial functions in Scala is, let's look at some examples that map an assorted List of elements:
1 val assorted = List(1,2,&amp;#34;joe&amp;#34;,&amp;#34;san&amp;#34;) 2 assorted map { case i: Int =&amp;gt; i + 1 } The code above when tried results in a match error. The reason being that we have an anonymous function inside the map block that checks against each element and since the match is not exhaustive, it explodes with an error.</description></item><item><title>Making a Case for Scala's case classes</title><link>https://bigelectrons.com/post/scala/scala-case-class/</link><pubDate>Thu, 25 Aug 2016 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-case-class/</guid><description>
If you are like me that is fed-up with writing or generating those getters / setters in your domain objects or Data Transfer Objects or Value Objects, deferring the process of writing at compile time is definitely a boon. Scala's case classes does exactly that. Some noteworthy things to know about Scala case classes.
They are defined with the keyword case and are always immutable in nature because the parameters are val's implicitly!</description></item><item><title>Scala's for expression</title><link>https://bigelectrons.com/post/scala/scala-for-expression/</link><pubDate>Tue, 14 Jun 2016 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-for-expression/</guid><description>
This blog article takes a deeper look into Scala's for comprehensions. The for comprehension / expression in Scala has the following syntax:
1 for ( seq ) yield expr In deed a very simple syntax underneath which lies a very strong fundamental concept. The seq in the syntax above could be a sequence of generators, definitions, and filters each separated with a semicolon. Let us assume that we have to identify all the Persons from a List that matches a certain criteria.</description></item><item><title>Accessing Tuples in Scala</title><link>https://bigelectrons.com/post/scala/scala-accessing-tuples/</link><pubDate>Fri, 13 May 2016 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-accessing-tuples/</guid><description>
Scala seems to be like a gold mine, the more you dig into, the more you get. While you deal with tuples, when you want to access the elements of a tuple, you have to use the default numbering given to you by the Scala compiler. Say for example., you have a tuple as defined below:
1val myTuple = (31, &amp;#34;Joesan&amp;#34;, &amp;#34;M&amp;#34;) 2println(myTuple._1) // To access the first element What you could alternatively do is to decompose the tuple into its constituent elements as below:</description></item><item><title>Sealed Traits in Scala</title><link>https://bigelectrons.com/post/scala/scala-sealed-traits/</link><pubDate>Wed, 06 Apr 2016 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-sealed-traits/</guid><description>
You probably know the idea behind using case classes and pattern matching them. Sometimes you might want the help of the compiler to tell you if you have pattern matched correctly by covering all possible cases. You can now get this sort of compiler support by creating a superclass for the case classes and marking them as sealed.
1sealed trait Person 2case class Student(name: String) extends Person 3case class Teacher(name: String) extends Person 4case class Author(name: String) extends Person 5case class Bertender(name: String) extends Person 6.</description></item><item><title>Liner Interpolation</title><link>https://bigelectrons.com/post/math/liner-interpolation/</link><pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/math/liner-interpolation/</guid><description>
In mathematics, linear interpolation is understood as a method of curve fitting using linear polynomials. A polynomial is just an expression that consists of variables along with their co-efficients. An example of a polynomial would be:
1x+2y&amp;amp;sup2 In the above equation, the variable x has 1 as its coefficient, the variable y has 2 as its coefficient. Let us assume that we have a set of linear data points pointing to the x and y-axis:</description></item><item><title>Builder, Strategy Patterns Still relevant?</title><link>https://bigelectrons.com/post/scala/scala-builder-strategy-pattern/</link><pubDate>Thu, 22 Oct 2015 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/scala/scala-builder-strategy-pattern/</guid><description>
If you agree with me that writing less code equals lesser bugs, you are going to appreciate how Scala simplifies Strategy and Builder design patterns by making you write less code!
Let's look at them one by one. Let us see how the Builder design pattern is implemented in Java.
Builder Pattern Builder design pattern helps in constructing a complex object in a series of steps. Let me take a classical example of preparing a Pizza, especially a vegetable Pizza!</description></item><item><title>Facts &amp; Knowledge Nuggets</title><link>https://bigelectrons.com/post/facts/facts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/facts/facts/</guid><description>
This page exists for one single fact that upon a glance on the topic, you get your aha moment!
Scala Co-Variant &amp;amp; Contra-Variant Spark SQL Joins</description></item><item><title>Privacy Policy</title><link>https://bigelectrons.com/post/privacy/privacy-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/privacy/privacy-policy/</guid><description>
Updated on: 19.12.2021
This website does not collect any personally identifiable information that can be used to personally identify you. There are no cookies installed that could be used to individually track you.
To learn more about cookies, please visit this website here.
Links to third party websites This website may contain links to other sites that are not in any way owned or managed by me or this website. Please be aware when you click on any such links, I'm not responsible for the privacy practices and/or policies of any website other than this website.</description></item></channel></rss>